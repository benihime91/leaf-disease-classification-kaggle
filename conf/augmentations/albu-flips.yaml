# @package augmentations
backend: albumentations
train:
  before_mix:
    - _target_: albumentations.RandomResizedCrop
      height: ${input.input_size}
      width: ${input.input_size}
      p: 1.0

    - _target_: albumentations.HorizontalFlip
      p: 0.5

    - _target_: albumentations.ShiftScaleRotate
      p: 0.5

    - _target_: albumentations.Normalize
      p: 1.0
      mean: ${input.mean}
      std: ${input.std}
      max_pixel_value: 255.0

    - _target_: albumentations.pytorch.transforms.ToTensorV2
      p: 1.0

  after_mix:
    - _target_: albumentations.Transpose
      p: 0.4

    - _target_: albumentations.HorizontalFlip
      p: 0.5

    - _target_: albumentations.VerticalFlip
      p: 0.5

    - _target_: albumentations.ShiftScaleRotate
      p: 0.5

    - _target_: albumentations.RandomResizedCrop
      height: ${input.input_size}
      width: ${input.input_size}
      p: 1.0

    - _target_: albumentations.CoarseDropout
      p: 0.5

    - _target_: albumentations.Cutout
      p: 0.5

    - _target_: albumentations.Normalize
      p: 1.0
      mean: ${input.mean}
      std: ${input.std}
      max_pixel_value: 255.0

    - _target_: albumentations.pytorch.transforms.ToTensorV2
      p: 1.0

valid:
  - _target_: albumentations.Resize
    height: ${input.input_size}
    width: ${input.input_size}
    p: 1.0

  - _target_: albumentations.Normalize
    p: 1.0
    mean: ${input.mean}
    std: ${input.std}
    max_pixel_value: 255.0

  - _target_: albumentations.pytorch.transforms.ToTensorV2
    p: 1.0
